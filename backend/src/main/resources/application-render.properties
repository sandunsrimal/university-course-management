spring.application.name=backend

# Database configuration for Render with PostgreSQL (auto-detected)
spring.datasource.url=jdbc:postgresql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?sslmode=require&connectTimeout=60&socketTimeout=60&loginTimeout=60
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Enhanced connection pool settings for better resilience
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=600000
spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.connection-test-query=SELECT 1

# PostgreSQL-specific Hibernate configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Critical: Disable MySQL-style identifier quoting for PostgreSQL
spring.jpa.properties.hibernate.globally_quoted_identifiers=false
spring.jpa.properties.hibernate.auto_quote_keyword=false
spring.jpa.properties.hibernate.globally_quoted_identifiers_skip_column_definitions=true

# PostgreSQL-specific settings
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.CharSet=utf8
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Override any MySQL-specific settings
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.dialect.quote_keyword=false

# Database initialization with retry
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=never

# Server configuration - CRITICAL: Use PORT environment variable from Render
server.port=${PORT:10000}
server.address=0.0.0.0
server.error.include-message=always
server.error.include-binding-errors=always

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

# Enhanced Actuator configuration for Render health checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.server.port=${PORT:10000}

# Make health check more lenient for cloud deployment
management.health.db.enabled=true
management.health.diskspace.enabled=false
management.health.ping.enabled=true

# CORS configuration
spring.web.cors.allowed-origins=https://university-frontend.onrender.com,http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Logging configuration for better debugging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.orm.jpa=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.postgresql=DEBUG 