databases:
  - name: university-postgres
    databaseName: university
    plan: free

services:
  # Backend API Service (Docker-based since Render doesn't support native Java)
  - type: web
    name: university-backend
    runtime: docker
    plan: free
    dockerfilePath: ./backend/Dockerfile
    dockerContext: ./backend
    dependsOn:
      - university-postgres
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: render
      - key: MYSQL_USER
        fromDatabase:
          name: university-postgres
          property: user
      - key: MYSQL_PASSWORD
        fromDatabase:
          name: university-postgres
          property: password
      - key: MYSQL_HOST
        fromDatabase:
          name: university-postgres
          property: host
      - key: MYSQL_PORT
        fromDatabase:
          name: university-postgres
          property: port
      - key: MYSQL_DATABASE
        fromDatabase:
          name: university-postgres
          property: database
      - key: JWT_SECRET
        generateValue: true
    healthCheckPath: /actuator/health

  # Frontend Web Service
  - type: web
    name: university-frontend
    runtime: node
    plan: free
    rootDir: frontend
    buildCommand: npm install && npm run build
    startCommand: npm start
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://university-backend.onrender.com 